///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        23/Jan/2016  20:59:53 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  G:\Documents\Zigbee\µÚ5ÕÂ                         /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\Source\Router.c                               /
//    Command line       =  -f "G:\Documents\Zigbee\µÚ5ÕÂ                     /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cf /
//                          g" (-DCPU32MHZ -DROOT=__near_func                 /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                  /
//                          "G:\Documents\Zigbee\µÚ5ÕÂ                        /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cf /
//                          g" (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0  /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x02000000         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "G:\Documents\Zigbee\µÚ5ÕÂ /
//                           zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢ /
//                          ÊµÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generi /
//                          cApp\Source\Router.c" -D ZTOOL_P1 -D              /
//                          NWK_AUTO_POLL -lC "G:\Documents\Zigbee\µÚ5ÕÂ      /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\RouterEB\List\" -lA                  /
//                          "G:\Documents\Zigbee\µÚ5ÕÂ                        /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\RouterEB\List\" --diag_suppress      /
//                          Pe001,Pa010 -o "G:\Documents\Zigbee\µÚ5ÕÂ         /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\RouterEB\Obj\" -e --no_code_motion   /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I "G:\Documents\Zigbee\µÚ5ÕÂ                     /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\" -I "G:\Documents\Zigbee\µÚ5ÕÂ      /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\Source\" -I                       /
//                          "G:\Documents\Zigbee\µÚ5ÕÂ                        /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\ZMain\TI2530DB\" -I         /
//                          "G:\Documents\Zigbee\µÚ5ÕÂ                        /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\hal\includ /
//                          e\" -I "G:\Documents\Zigbee\µÚ5ÕÂ                 /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\hal\target /
//                          \CC2530EB\" -I "G:\Documents\Zigbee\µÚ5ÕÂ         /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\mac\includ /
//                          e\" -I "G:\Documents\Zigbee\µÚ5ÕÂ                 /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\mac\high_l /
//                          evel\" -I "G:\Documents\Zigbee\µÚ5ÕÂ              /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\mac\low_le /
//                          vel\srf04\" -I "G:\Documents\Zigbee\µÚ5ÕÂ         /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\mac\low_le /
//                          vel\srf04\single_chip\" -I                        /
//                          "G:\Documents\Zigbee\µÚ5ÕÂ                        /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\mt\" -I    /
//                          "G:\Documents\Zigbee\µÚ5ÕÂ                        /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\osal\inclu /
//                          de\" -I "G:\Documents\Zigbee\µÚ5ÕÂ                /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\services\s /
//                          addr\" -I "G:\Documents\Zigbee\µÚ5ÕÂ              /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\services\s /
//                          data\" -I "G:\Documents\Zigbee\µÚ5ÕÂ              /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\stack\af\" /
//                           -I "G:\Documents\Zigbee\µÚ5ÕÂ                    /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\stack\nwk\ /
//                          " -I "G:\Documents\Zigbee\µÚ5ÕÂ                   /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\stack\sapi /
//                          \" -I "G:\Documents\Zigbee\µÚ5ÕÂ                  /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\stack\sec\ /
//                          " -I "G:\Documents\Zigbee\µÚ5ÕÂ                   /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\stack\sys\ /
//                          " -I "G:\Documents\Zigbee\µÚ5ÕÂ                   /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\stack\zdo\ /
//                          " -I "G:\Documents\Zigbee\µÚ5ÕÂ                   /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\zmac\" -I  /
//                          "G:\Documents\Zigbee\µÚ5ÕÂ                        /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\..\..\..\..\..\Components\zmac\f8w\" /
//                           -Ohz --require_prototypes                        /
//    List file          =  G:\Documents\Zigbee\µÚ5ÕÂ                         /
//                          zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢Ê /
//                          µÑé\ZStack-2.5.1a\Projects\zstack\Samples\Generic /
//                          App\CC2530DB\RouterEB\List\Router.s51             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Router

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??CRC16_Check?relay
        FUNCTION ??CRC16_Check?relay,0203H
        PUBLIC ??GenericApp_Init?relay
        FUNCTION ??GenericApp_Init?relay,0203H
        PUBLIC ??GenericApp_ProcessEvent?relay
        FUNCTION ??GenericApp_ProcessEvent?relay,0203H
        PUBLIC ??GenericApp_SendTheMessage?relay
        FUNCTION ??GenericApp_SendTheMessage?relay,0203H
        FUNCTION ??rxCB?relay,0203H
        PUBLIC CRC16_Check
        FUNCTION CRC16_Check,0203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC GenericApp_ClusterList
        PUBLIC GenericApp_Init
        FUNCTION GenericApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC GenericApp_NwkState
        PUBLIC GenericApp_ProcessEvent
        FUNCTION GenericApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GenericApp_SendTheMessage
        FUNCTION GenericApp_SendTheMessage,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 31, STACK
        PUBLIC GenericApp_SimpleDesc
        PUBLIC GenericApp_TaskID
        PUBLIC GenericApp_TransID
        PUBLIC GenericApp_epDesc
        PUBWEAK P0DIR
        PUBLIC RxBuf
        PUBWEAK _A_P0
        PUBLIC eui64
        PUBLIC modbus_data_one
        FUNCTION rxCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
HalUARTOpen         SYMBOL "HalUARTOpen"
afRegister          SYMBOL "afRegister"
osal_msg_receive    SYMBOL "osal_msg_receive"
HalLedBlink         SYMBOL "HalLedBlink"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
HalLedSet           SYMBOL "HalLedSet"
HalUARTWrite        SYMBOL "HalUARTWrite"
AF_DataRequest      SYMBOL "AF_DataRequest"
HalUARTRead         SYMBOL "HalUARTRead"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??HalLedBlink?relay SYMBOL "?relay", HalLedBlink
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
??HalUARTRead?relay SYMBOL "?relay", HalUARTRead
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
??NLME_GetExtAddr?relay SYMBOL "?relay", NLME_GetExtAddr
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
CRC16_Check         SYMBOL "CRC16_Check"
??CRC16_Check?relay SYMBOL "?relay", CRC16_Check
GenericApp_Init     SYMBOL "GenericApp_Init"
??GenericApp_Init?relay SYMBOL "?relay", GenericApp_Init
GenericApp_ProcessEvent SYMBOL "GenericApp_ProcessEvent"
??GenericApp_ProcessEvent?relay SYMBOL "?relay", GenericApp_ProcessEvent
GenericApp_SendTheMessage SYMBOL "GenericApp_SendTheMessage"
??GenericApp_SendTheMessage?relay SYMBOL "?relay", GenericApp_SendTheMessage

        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedBlink
        FUNCTION HalLedBlink,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTRead
        FUNCTION HalUARTRead,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??HalLedBlink?relay
        FUNCTION ??HalLedBlink?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??HalUARTOpen?relay
        FUNCTION ??HalUARTOpen?relay,00H
        EXTERN ??HalUARTRead?relay
        FUNCTION ??HalUARTRead?relay,00H
        EXTERN ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,00H
        EXTERN ??NLME_GetExtAddr?relay
        FUNCTION ??NLME_GetExtAddr?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H

// G:\Documents\Zigbee\µÚ5ÕÂ zigbeeĞ­ÒéÕ»Ó¦ÓÃÓë×éÍø\13.»ùÓÚGenericAppÎŞÏßÊÕ·¢ÊµÑé\ZStack-2.5.1a\Projects\zstack\Samples\GenericApp\Source\Router.c
//    1 #include "OSAL.h"
//    2 #include "AF.h"
//    3 #include "ZDApp.h"
//    4 #include "ZDObject.h"
//    5 #include "ZDProfile.h"
//    6 
//    7 #include "Common.h"
//    8 #include "DebugTrace.h"
//    9 
//   10 #if !defined( WIN32 )
//   11   #include "OnBoard.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1
//   12 #endif
//   13 
//   14 /* HAL */
//   15 #include "hal_lcd.h"
//   16 #include "hal_led.h"
//   17 #include "hal_key.h"
//   18 #include "hal_uart.h"
//   19 
//   20 
//   21 /**Add By  Yao Bin ***/
//   22 #if !defined( SERIAL_APP_TX_MAX )
//   23 #define SERIAL_APP_TX_MAX  80
//   24 #endif

        RSEG XDATA_I:XDATA:NOROOT(0)
//   25 byte modbus_data_one[]={0x01,0x03,0x10,0x00,0x00,0x0F,0x01,0x0E};
modbus_data_one:
        DATA8
        DS 8
        REQUIRE `?<Initializer for modbus_data_one>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   26 byte RxBuf[SERIAL_APP_TX_MAX+1];
RxBuf:
        DS 81
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   27 static uint8 SerialApp_TxLen;
SerialApp_TxLen:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   28 byte *eui64;
eui64:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   29 /****/
//   30 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   31 const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] =
GenericApp_ClusterList:
        DW 1
//   32 {
//   33   GENERICAPP_CLUSTERID
//   34 };
//   35 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   36 const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
GenericApp_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 1
        DATA16
        DW GenericApp_ClusterList
        DATA8
        DB 1
        DATA16
        DW GenericApp_ClusterList
//   37 {
//   38   GENERICAPP_ENDPOINT,              //  int Endpoint;
//   39   GENERICAPP_PROFID,                //  uint16 AppProfId[2];
//   40   GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
//   41   GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
//   42   GENERICAPP_FLAGS,                 //  int   AppFlags:4; 
//   43   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   44   (cId_t *)GenericApp_ClusterList,  //  byte *pAppInClusterList;
//   45   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   46   (cId_t *)GenericApp_ClusterList   //  byte *pAppInClusterList;
//   47 };
//   48 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   49 endPointDesc_t GenericApp_epDesc;
GenericApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   50 byte GenericApp_TaskID;
GenericApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   51 byte GenericApp_TransID;
GenericApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   52 devStates_t GenericApp_NwkState;
GenericApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   53 
//   54 //void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//   55 void GenericApp_SendTheMessage( void );
//   56 void rxCB(uint8 port,uint8 event);
//   57 uint16 CRC16_Check(uint8 *Pushdata,uint8 length);

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   58 void GenericApp_Init( byte task_id )
GenericApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function GenericApp_Init
        CODE
//   59 { 
        FUNCALL GenericApp_Init, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, HalUARTOpen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 29
        MOV     A,#-0x1d
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,R1
        MOV     R6,A
//   60 /***Add By Bin Yao for UART test****/
//   61   eui64=NLME_GetExtAddr();//get the EUI-64 Address
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
        MOV     DPTR,#eui64
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine1 & 0xFFFF
//   62   halUARTCfg_t uartConfig;
//   63   uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
??CrossCallReturnLabel_0:
        MOV     A,#0x1
        MOVX    @DPTR,A
//   64   uartConfig.baudRate             = HAL_UART_BR_9600;
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//   65   uartConfig.flowControl          = FALSE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//   66   uartConfig.flowControlThreshold = 64;   // 2x30 don't care - see uart driver.
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x40
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   67   uartConfig.rx.maxBufSize        = 128;  // 2x30 don't care - see uart driver.
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#-0x80
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   68   uartConfig.tx.maxBufSize        = 128;  // 2x30 don't care - see uart driver.
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#-0x80
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   69   uartConfig.idleTimeout          = 6;    // 2x30 don't care - see uart driver.
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x6
        MOVX    @DPTR,A
//   70   uartConfig.intEnable            = TRUE; // 2x30 don't care - see uart driver.
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
//   71   uartConfig.callBackFunc         = rxCB;
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#??rxCB?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??rxCB?relay >> 8) & 0xff
        LCALL   ?Subroutine1 & 0xFFFF
//   72   HalUARTOpen (0, &uartConfig);
??CrossCallReturnLabel_1:
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x0
        LCALL   ??HalUARTOpen?relay
//   73   
//   74   IO_OUTPUT_485;                //ÉèÖÃ485/IO¿ÚÎªÊä³ö
        ORL     0xfd,#0x80
//   75   RECV_485;//receive
        CLR     0x80.7
//   76 /*******/  
//   77   
//   78     GenericApp_TaskID = task_id;
        MOV     A,R6
        MOV     DPTR,#GenericApp_TaskID
        MOVX    @DPTR,A
//   79     GenericApp_NwkState=DEV_INIT;
        MOV     DPTR,#GenericApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//   80     GenericApp_TransID = 0;
        MOV     DPTR,#GenericApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   81     
//   82     GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
        MOV     DPTR,#GenericApp_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//   83     GenericApp_epDesc.task_id = &GenericApp_TaskID;
        INC     DPTR
        MOV     A,#GenericApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//   84     GenericApp_epDesc.simpleDesc
//   85         = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
        INC     DPTR
        MOV     A,#GenericApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//   86     
//   87     GenericApp_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   88     afRegister( &GenericApp_epDesc ); 
        ; Setup parameters for call to function afRegister
        MOV     R2,#GenericApp_epDesc & 0xff
        MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//   89 }
        MOV     A,#0x1d
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 9)
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
        REQUIRE P0DIR
        REQUIRE _A_P0
//   90 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   91 UINT16 GenericApp_ProcessEvent( byte task_id, UINT16 events )
GenericApp_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function GenericApp_ProcessEvent
        CODE
//   92 {
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalLedBlink
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   93     afIncomingMSGPacket_t *MSGpkt;
//   94     
//   95     if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??GenericApp_ProcessEvent_0
//   96     {
//   97         MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??GenericApp_ProcessEvent_1
//   98         while ( MSGpkt )
//   99         {
//  100             switch ( MSGpkt->hdr.event )
??GenericApp_ProcessEvent_2:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        XRL     A,#0xd1
        JNZ     ??GenericApp_ProcessEvent_3
//  101             {
//  102             case AF_INCOMING_MSG_CMD:
//  103                 //GenericApp_MessageMSGCB(MSGpkt);
//  104                 break;
//  105             case ZDO_STATE_CHANGE:
//  106                 GenericApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#GenericApp_NwkState
        MOVX    @DPTR,A
//  107                 if(GenericApp_NwkState == DEV_ROUTER||GenericApp_NwkState == DEV_END_DEVICE)
        XRL     A,#0x7
        JZ      ??GenericApp_ProcessEvent_4
        MOVX    A,@DPTR
        XRL     A,#0x6
        JNZ     ??GenericApp_ProcessEvent_3
//  108                 {
//  109                   HalLedBlink(HAL_LED_2, 3, 50, 500);//Led2ÉÁË¸3´Î£¬±íÊ¾×éÍø³É¹¦.
??GenericApp_ProcessEvent_4:
        ; Setup parameters for call to function HalLedBlink
        MOV     R4,#-0xc
        MOV     R5,#0x1
        MOV     R3,#0x32
        MOV     R2,#0x3
        MOV     R1,#0x2
        LCALL   ??HalLedBlink?relay
//  110                   osal_start_timerEx( GenericApp_TaskID,
//  111                                      GENERICAPP_SEND_MSG_EVT,
//  112                                      GENERICAPP_SEND_MSG_TIMEOUT );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#0x40
        MOV     R5,#0x1f
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  113                 }
//  114                 break;
//  115             default:
//  116                 break;
//  117             }
//  118             osal_msg_deallocate( (uint8 *)MSGpkt );
??GenericApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
//  119             MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??GenericApp_ProcessEvent_1:
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  120         }
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??GenericApp_ProcessEvent_2
//  121         
//  122         // return unprocessed events
//  123         return (events ^ SYS_EVENT_MSG);
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
??GenericApp_ProcessEvent_5:
        MOV     R3,A
        SJMP    ??GenericApp_ProcessEvent_6
//  124     }
//  125     if ( events & GENERICAPP_SEND_MSG_EVT )
??GenericApp_ProcessEvent_0:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??GenericApp_ProcessEvent_7
//  126     {
//  127       //HalLedSet(HAL_LED_1,HAL_LED_MODE_OFF);//LED1ÉÁË¸Ò»´Î±íÊ¾·¢ËÍ ModBusÊı¾İ
//  128 
//  129       // Setup to send message again
//  130       osal_start_timerEx( GenericApp_TaskID,
//  131                           GENERICAPP_SEND_MSG_EVT,
//  132                         GENERICAPP_SEND_MSG_TIMEOUT );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#0x40
        MOV     R5,#0x1f
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  133       HalLedSet(HAL_LED_1,HAL_LED_MODE_ON);
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  134       HalUARTWrite(0, modbus_data_one, 8);//¶¨Ê±·¢ËÍ·¢ËÍÊı¾İµ½»ãÁ÷Ïä
        ; Setup parameters for call to function HalUARTWrite
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R2,#modbus_data_one & 0xff
        MOV     R3,#(modbus_data_one >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  135       // return unprocessed events
//  136       return (events ^ GENERICAPP_SEND_MSG_EVT);
        MOV     A,R6
        XRL     A,#0x1
        MOV     R2,A
        MOV     A,R7
        SJMP    ??GenericApp_ProcessEvent_5
//  137     }
//  138     return 0;
??GenericApp_ProcessEvent_7:
        MOV     R2,#0x0
        MOV     R3,#0x0
??GenericApp_ProcessEvent_6:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  139 }
//  140 
//  141 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  142 void GenericApp_SendTheMessage(void)
GenericApp_SendTheMessage:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function GenericApp_SendTheMessage
        CODE
//  143 {    
        FUNCALL GenericApp_SendTheMessage, HalLedBlink
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_SendTheMessage, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
//  144     HalLedBlink(HAL_LED_2, 1, 50, 500);
        ; Setup parameters for call to function HalLedBlink
        MOV     R4,#-0xc
        MOV     R5,#0x1
        MOV     R3,#0x32
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedBlink?relay
//  145     afAddrType_t devDstAddr;
//  146     devDstAddr.addrMode=(afAddrMode_t)Addr16Bit;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  147     devDstAddr.endPoint=GENERICAPP_ENDPOINT;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0xa
        LCALL   ?Subroutine1 & 0xFFFF
//  148     devDstAddr.addr.shortAddr=0x0000; 
??CrossCallReturnLabel_2:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  149     
//  150     AF_DataRequest(&devDstAddr,
//  151         &GenericApp_epDesc,
//  152         GENERICAPP_CLUSTERID,
//  153         SerialApp_TxLen,//send len
//  154         RxBuf,//send buf
//  155         &GenericApp_TransID,
//  156         AF_DISCV_ROUTE,
//  157         AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#GenericApp_TransID & 0xff
        MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#RxBuf & 0xff
        MOV     ?V0 + 1,#(RxBuf >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 27)
        MOV     DPTR,#SerialApp_TxLen
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 31)
        MOV     R1,#0x20
        MOV     R4,#GenericApp_epDesc & 0xff
        MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
//  158 }
        MOV     A,#0xc
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock2
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 38)
        CFI Block cfiCond6 Using cfiCommon0
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_2
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+0
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker7 Using cfiCommon1
        CFI (cfiPicker7) NoFunction
        CFI (cfiPicker7) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function HalUARTOpen
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiPicker7
//  159 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  160 static void rxCB(uint8 port,uint8 event)
rxCB:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function rxCB
        CODE
//  161 {
        FUNCALL rxCB, HalUARTRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rxCB, CRC16_Check
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rxCB, GenericApp_SendTheMessage
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL rxCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R7,A
//  162   if ((event & (HAL_UART_RX_FULL | HAL_UART_RX_ABOUT_FULL | HAL_UART_RX_TIMEOUT)) &&
//  163 #if SERIAL_APP_LOOPBACK
//  164       (SerialApp_TxLen < SERIAL_APP_TX_MAX))
//  165 #else
//  166       !SerialApp_TxLen)
        MOV     A,#0x7
        ANL     A,R7
        JZ      ??rxCB_0
        MOV     DPTR,#SerialApp_TxLen
        MOVX    A,@DPTR
        JNZ     ??rxCB_0
//  167 #endif
//  168   {
//  169     SerialApp_TxLen = HalUARTRead(0, RxBuf, SERIAL_APP_TX_MAX);
        ; Setup parameters for call to function HalUARTRead
        MOV     R4,#0x50
        MOV     R5,#0x0
        MOV     R2,#RxBuf & 0xff
        MOV     R3,#(RxBuf >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??HalUARTRead?relay
        MOV     A,R2
        MOV     DPTR,#SerialApp_TxLen
        MOVX    @DPTR,A
//  170     if (SerialApp_TxLen)
        JZ      ??rxCB_0
//  171     {
//  172       if(RxBuf[0]==Modbus_Addr&&RxBuf[1]==0x03)
        MOV     DPTR,#RxBuf
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??rxCB_1
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x3
        JNZ     ??rxCB_1
//  173       {
//  174         uint8 len=RxBuf[2];
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
//  175         uint16 crc=CRC16_Check(RxBuf,len+3);
        ; Setup parameters for call to function CRC16_Check
        MOV     A,#0x3
        ADD     A,R6
        MOV     R1,A
        MOV     R2,#RxBuf & 0xff
        MOV     R3,#(RxBuf >> 8) & 0xff
        LCALL   ??CRC16_Check?relay
        MOV     ?V0 + 1,R3
//  176         uint8 crc_high=crc>>8&0xff;
//  177         uint8 crc_low=crc&0xff;
//  178         if(crc_high==RxBuf[len+3]&&crc_low==RxBuf[len+4])
        MOV     R0,?V0 + 1
        MOV     ?V0 + 0,R6
        MOV     A,#(RxBuf + 3) & 0xff
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,#((RxBuf + 3) >> 8) & 0xff
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??rxCB_1
        MOV     A,#(RxBuf + 4) & 0xff
        ADD     A,?V0 + 0
        MOV     DPL,A
        MOV     A,#((RxBuf + 4) >> 8) & 0xff
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??rxCB_1
//  179         {
//  180             GenericApp_SendTheMessage();//·¢ËÍÊı¾İµ½Ğ­µ÷Æ÷
        ; Setup parameters for call to function GenericApp_SendTheMessage
        LCALL   ??GenericApp_SendTheMessage?relay
//  181         }
//  182       }
//  183       HalLedSet(HAL_LED_1,HAL_LED_MODE_OFF);
??rxCB_1:
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x0
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  184       SerialApp_TxLen=0;
        MOV     DPTR,#SerialApp_TxLen
        CLR     A
        MOVX    @DPTR,A
//  185     }
//  186   }
//  187 }
??rxCB_0:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock8
//  188 
//  189 /*
//  190 void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pkt)
//  191 {  
//  192     switch ( pkt->clusterId )
//  193     {
//  194     case GENERICAPP_CLUSTERID:
//  195       
//  196         osal_memset(buf, 0 , 3);
//  197         osal_memcpy(buf, pkt->cmd.Data, 2);
//  198         if(buf[0]=='D' && buf[1]=='1')       
//  199         {
//  200             HalLedBlink(HAL_LED_1, 0, 50, 500);                                   
//  201         }
//  202         else
//  203         {
//  204             HalLedSet(HAL_LED_1,HAL_LED_MODE_ON);                   
//  205         }
//  206       
//  207         break;
//  208     }
//  209 }
//  210 */
//  211 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  212 uint16 CRC16_Check(uint8 *Pushdata,uint8 length)  
CRC16_Check:
        CFI Block cfiBlock9 Using cfiCommon0
        CFI Function CRC16_Check
        CODE
//  213 {  
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  214   uint16 Reg_CRC=0xffff;  
        MOV     R4,#-0x1
        MOV     R5,#-0x1
//  215   uint8 Temp_reg=0x00;  
//  216   uint8 i,j;   
//  217   for( i = 0; i<length; i ++)
        MOV     R6,#0x0
        SJMP    ??CRC16_Check_0
//  218   {  
//  219 	Reg_CRC^= *Pushdata++;  
//  220 	for (j = 0; j<8; j++)  
//  221 	{       
//  222 	if (Reg_CRC & 0x0001)  
//  223 		Reg_CRC=Reg_CRC>>1^0xA001;  
//  224 	else  
//  225 		Reg_CRC >>=1;  
??CRC16_Check_1:
        CLR     C
        RRC     A
        MOV     R5,A
        MOV     A,R4
        RRC     A
        MOV     R4,A
??CRC16_Check_2:
        DEC     R0
        MOV     A,R0
        JNZ     ??CRC16_Check_3
        INC     R6
??CRC16_Check_0:
        MOV     A,R6
        CLR     C
        SUBB    A,R1
        JNC     ??CRC16_Check_4
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        XRL     A,R4
        MOV     R4,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R0,#0x8
??CRC16_Check_3:
        MOV     A,R4
        MOV     C,0xE0 /* A   */.0
        MOV     A,R5
        JNC     ??CRC16_Check_1
        CLR     C
        RRC     A
        MOV     R5,A
        MOV     A,R4
        RRC     A
        XRL     A,#0x1
        MOV     R4,A
        MOV     A,R5
        XRL     A,#0xa0
        MOV     R5,A
        SJMP    ??CRC16_Check_2
//  226    }
//  227   }
//  228   Temp_reg=Reg_CRC>>8;
//  229   return (Reg_CRC<<8|Temp_reg);  
??CRC16_Check_4:
        MOV     A,R4
        MOV     R3,A
        MOV     A,R5
        MOV     R2,A
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock9
//  230 }

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for modbus_data_one>`:
        DATA8
        DB 1
        DB 3
        DB 16
        DB 0
        DB 0
        DB 15
        DB 1
        DB 14

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_SendTheMessage?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_SendTheMessage

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??rxCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    rxCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??CRC16_Check?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    CRC16_Check

        END
// 
// 665 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//   2 bytes in segment SFR_AN
//   8 bytes in segment XDATA_I
//   8 bytes in segment XDATA_ID
//  14 bytes in segment XDATA_ROM_C
//  93 bytes in segment XDATA_Z
// 
// 703 bytes of CODE  memory
//  14 bytes of CONST memory
//   0 bytes of DATA  memory (+ 2 bytes shared)
// 101 bytes of XDATA memory
//
//Errors: none
//Warnings: none
